//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wsUnitTest.ServiceCalculoRota {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Veiculo", Namespace="http://schemas.datacontract.org/2004/07/wsMapLinkInformacoesRota.Model")]
    [System.SerializableAttribute()]
    public partial class Veiculo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacidadeTanqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoriaVeiculoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ConsumoMedioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValorCombustivelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VelocidadeMediaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapacidadeTanque {
            get {
                return this.CapacidadeTanqueField;
            }
            set {
                if ((this.CapacidadeTanqueField.Equals(value) != true)) {
                    this.CapacidadeTanqueField = value;
                    this.RaisePropertyChanged("CapacidadeTanque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoriaVeiculo {
            get {
                return this.CategoriaVeiculoField;
            }
            set {
                if ((this.CategoriaVeiculoField.Equals(value) != true)) {
                    this.CategoriaVeiculoField = value;
                    this.RaisePropertyChanged("CategoriaVeiculo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ConsumoMedio {
            get {
                return this.ConsumoMedioField;
            }
            set {
                if ((this.ConsumoMedioField.Equals(value) != true)) {
                    this.ConsumoMedioField = value;
                    this.RaisePropertyChanged("ConsumoMedio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ValorCombustivel {
            get {
                return this.ValorCombustivelField;
            }
            set {
                if ((this.ValorCombustivelField.Equals(value) != true)) {
                    this.ValorCombustivelField = value;
                    this.RaisePropertyChanged("ValorCombustivel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VelocidadeMedia {
            get {
                return this.VelocidadeMediaField;
            }
            set {
                if ((this.VelocidadeMediaField.Equals(value) != true)) {
                    this.VelocidadeMediaField = value;
                    this.RaisePropertyChanged("VelocidadeMedia");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseInformacoesRota", Namespace="http://schemas.datacontract.org/2004/07/wsMapLinkInformacoesRota.Model")]
    [System.SerializableAttribute()]
    public partial class ResponseInformacoesRota : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CustoCombustivelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CustoPedagioCombustivelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanciaTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempoTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CustoCombustivel {
            get {
                return this.CustoCombustivelField;
            }
            set {
                if ((this.CustoCombustivelField.Equals(value) != true)) {
                    this.CustoCombustivelField = value;
                    this.RaisePropertyChanged("CustoCombustivel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CustoPedagioCombustivel {
            get {
                return this.CustoPedagioCombustivelField;
            }
            set {
                if ((this.CustoPedagioCombustivelField.Equals(value) != true)) {
                    this.CustoPedagioCombustivelField = value;
                    this.RaisePropertyChanged("CustoPedagioCombustivel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DistanciaTotal {
            get {
                return this.DistanciaTotalField;
            }
            set {
                if ((this.DistanciaTotalField.Equals(value) != true)) {
                    this.DistanciaTotalField = value;
                    this.RaisePropertyChanged("DistanciaTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempoTotal {
            get {
                return this.TempoTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.TempoTotalField, value) != true)) {
                    this.TempoTotalField = value;
                    this.RaisePropertyChanged("TempoTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCalculoRota.IServiceRoute")]
    public interface IServiceRoute {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRoute/GetInformacoesRota", ReplyAction="http://tempuri.org/IServiceRoute/GetInformacoesRotaResponse")]
        wsUnitTest.ServiceCalculoRota.ResponseInformacoesRota GetInformacoesRota(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, wsUnitTest.ServiceCalculoRota.Veiculo veiculo, int tipoRota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRoute/GetInformacoesRota", ReplyAction="http://tempuri.org/IServiceRoute/GetInformacoesRotaResponse")]
        System.Threading.Tasks.Task<wsUnitTest.ServiceCalculoRota.ResponseInformacoesRota> GetInformacoesRotaAsync(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, wsUnitTest.ServiceCalculoRota.Veiculo veiculo, int tipoRota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRoute/strGetInformacoesRota", ReplyAction="http://tempuri.org/IServiceRoute/strGetInformacoesRotaResponse")]
        string strGetInformacoesRota(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, int capacidadeTanque, int categoriaVeiculo, float consumoMedio, double valorCombustivel, int velocidadeMedia, int tipoRota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRoute/strGetInformacoesRota", ReplyAction="http://tempuri.org/IServiceRoute/strGetInformacoesRotaResponse")]
        System.Threading.Tasks.Task<string> strGetInformacoesRotaAsync(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, int capacidadeTanque, int categoriaVeiculo, float consumoMedio, double valorCombustivel, int velocidadeMedia, int tipoRota);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRouteChannel : wsUnitTest.ServiceCalculoRota.IServiceRoute, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRouteClient : System.ServiceModel.ClientBase<wsUnitTest.ServiceCalculoRota.IServiceRoute>, wsUnitTest.ServiceCalculoRota.IServiceRoute {
        
        public ServiceRouteClient() {
        }
        
        public ServiceRouteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRouteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRouteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRouteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public wsUnitTest.ServiceCalculoRota.ResponseInformacoesRota GetInformacoesRota(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, wsUnitTest.ServiceCalculoRota.Veiculo veiculo, int tipoRota) {
            return base.Channel.GetInformacoesRota(token, enderecoPartida, cidadeUfPartida, enderecoDestino, cidadeUfDestino, veiculo, tipoRota);
        }
        
        public System.Threading.Tasks.Task<wsUnitTest.ServiceCalculoRota.ResponseInformacoesRota> GetInformacoesRotaAsync(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, wsUnitTest.ServiceCalculoRota.Veiculo veiculo, int tipoRota) {
            return base.Channel.GetInformacoesRotaAsync(token, enderecoPartida, cidadeUfPartida, enderecoDestino, cidadeUfDestino, veiculo, tipoRota);
        }
        
        public string strGetInformacoesRota(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, int capacidadeTanque, int categoriaVeiculo, float consumoMedio, double valorCombustivel, int velocidadeMedia, int tipoRota) {
            return base.Channel.strGetInformacoesRota(token, enderecoPartida, cidadeUfPartida, enderecoDestino, cidadeUfDestino, capacidadeTanque, categoriaVeiculo, consumoMedio, valorCombustivel, velocidadeMedia, tipoRota);
        }
        
        public System.Threading.Tasks.Task<string> strGetInformacoesRotaAsync(string token, string enderecoPartida, string cidadeUfPartida, string enderecoDestino, string cidadeUfDestino, int capacidadeTanque, int categoriaVeiculo, float consumoMedio, double valorCombustivel, int velocidadeMedia, int tipoRota) {
            return base.Channel.strGetInformacoesRotaAsync(token, enderecoPartida, cidadeUfPartida, enderecoDestino, cidadeUfDestino, capacidadeTanque, categoriaVeiculo, consumoMedio, valorCombustivel, velocidadeMedia, tipoRota);
        }
    }
}
